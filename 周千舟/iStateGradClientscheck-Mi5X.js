


const dataArr = ["7555147293", "25641-04-2", "7555150033", "25655-02-2", "7555149042", "25655-01-1", "7555146577", "25614-04-1", "7555146551", "25614-03-2", "7610627854", "80746-02", "7610646576", "8074501", "7610664110", "80757-03", "7610663205", "80757-01", "7610664093", "80757-02", "7610632717", "80756-01", "7610662462", "80756-01", "7610632384", "80754-01", "7625441645", "25644-01", "7555147248", "25641-03-1", "7555147222", "25641-01-1", "7555639932", "25642-04", "7555147336", "25642-02-1", "7555148430", "25643-01-2", "7555148427", "25643-01-1", "7555147277", "25641-04-1", "7555147352", "25641-01-2", "7555148456", "25643-02-1", "7555148485", "25643-04-1", "7555147394", "25642-03-1", "7555147381", "25642-02-2", "7555147408", "25642-03-2", "7555147323", "25642-01-2", "7555147307", "25642-01-1", "7555148469", "25643-03-1", "7555147206", "25641-02-1", "7555147264", "25641-03-2", "7555147219", "25641-02-2", "7579947082", "25644-01-5", "7625441658", "25651-01", "7555149039", "25654-04-2", "7555148629", "25654-03-1", "7555148603", "25654-02-1", "7555148544", "25654-01-2", "7555148599", "25655-04-2", "7555148528", "25654-01-1", "7555148515", "25655-04-1", "7555149547", "25655-02-1", "7555149521", "25655-01-2", "7555148632", "25654-03-2", "7555148616", "25654-02-2", "7555149026", "25654-04-1", "7625464167", "25633-01", "7555148355", "25631-02-1", "7555148397", "25632-02-2", "7555147961", "25631-04-1", "7555148342", "25631-01-1", "7555148371", "25631-02-2", "7555148368", "25631-01-2", "7555147440", "25631-03-1", "7555148414", "25632-03-1", "7555147437", "25631-02-2", "7555147411", "25631-02-1", "7555148384", "25632-02-1", "7555147453", "25631-03-2", "7625441108", "25611-01", "7555639857", "25614-04", "7555142357", "25614-01-1", "7555146173", "25614-03-1", "7555146144", "25614-02-1", "7555146131", "25614-01-2", "7555146157", "25614-02-2", "7625441241", "25624-01", "7625441225", "25621-01", "7555146724", "25628-04-3", "7555146694", "25628-04-2", "7555639929", "25628-02", "7555146580", "25627-01-1", "7555146652", "25628-01-1", "7555146610", "25627-02-2", "7555146593", "25627-01-2", "7555147192", "25628-03-1", "7555146623", "25627-03-1", "7555146607", "25627-02-1", "7555146681", "25628-04-1", "7555146636", "25627-04-1", "7627773834", "8077105", "7627410380", "80772-05", "7649363174", "80771-05", "7633881831", "80772-05", "7633864229", "80771-05", "7633785667", "80721-01", "7627410393", "80721-01", "7633785162", "80741-05", "7610655255", "80746-01", "7610627580", "80746-01", "7610627766", "80746-02", "7610655659", "80746-01", "7610655112", "8074401", "7610604970", "8074501", "7610628235", "80746-03", "7610627997", "80746-02", "7610627463", "80746-01", "7610655141", "8074401", "7610655880", "80746-02", "7610646589", "8074501", "7610648312", "8074401", "7610655196", "8074401", "7610622383", "8074401", "7610627779", "80746-02", "7610648338", "8074401", "7610646459", "8074501", "7610656216", "80746-03", "7610655457", "80746-01", "7610655343", "80746-01", "7610627942", "80746-02", "7610621830", "8074501", "7627422316", "8074205", "7627420121", "8074105", "7627449755", "8074305", "7649363217", "80741-05", "7649363204", "80742-05", "7633881697", "80743-05", "7633881798", "80742-05", "7623030070", "80743-01", "7623046011", "80742-01", "7623046040", "80743-01", "7623045832", "80742-01", "7633770049", "80732-05", "7633785595", "80731-05", "7627451505", "8073205", "7627421876", "8073105", "7649363220", "80731-05", "7627422114", "8076205", "7627422202", "8076105", "7633881958", "80761-05", "7633864274", "80762-05", "7610660424", "80754-01", "7610632629", "80755-01", "7610632401", "80755-01", "7610663292", "80757-01", "7610663872", "80757-02", "7610628541", "80754-01", "7610632485", "80755-01", "7610663742", "80757-02", "7610628453", "80753-01", "7610662518", "80756-01", "7610663104", "80756-02", "7610663322", "80757-01", "7610634654", "80756-02", "7610675680", "80757-02", "7610663234", "80757-01", "7610662710", "80756-01", "7610628495", "80754-01", "7610663814", "80757-02", "7610656779", "80754-01", "7610675055", "80756-03", "7610634537", "80756-01", "7610656489", "80753-01", "7610662606", "80756-01", "7610656548", "80753-01", "7610675592", "80757-01", "7610675563", "80757-01", "7610674951", "80756-02", "7610674850", "80756-02", "7610628323", "80753-01", "7610674759", "80756-02", "7610656375", "80753-01", "7610663801", "80757-02", "7610661137", "80756-01", "7610632603", "80755-01", "7610662938", "80756-02", "7627451547", "8075205", "7627451592", "8075105", "7649362461", "80752-05", "7649363190", "80751-05", "7633882010", "80752-05", "7633865756", "80751-05", "7555103750", "25645-02-4", "7555102656", "25644-03-7", "7555101943", "25644-02-4", "7555104245", "25645-03-2", "7555102685", "25644-03-9", "7555103516", "25644-04-9", "7555102496", "25644-02-6", "7555641548", "25650-04", "7555113780", "25652-03-3", "7555113298", "25652-02-7", "7555112530", "25651-03-3", "7555114972", "25652-03-12", "7555112859", "25651-04-8", "7555112934", "25651-04-11", "7555112833", "25651-04-6", "7555113748", "25652-03-1", "7555113142", "25652-01-11", "7555111322", "25651-02-6", "7555111234", "25651-02-3", "7555115555", "25653-03-6", "7571861287", "25655-04-3", "7555125875", "25662-03-6", "7555126621", "25663-02-9", "7555125950", "25663-01-4", "7555126474", "25663-01-6", "7555122788", "25661-03-7", "7555126461", "25663-01-5", "7555138716", "25666-02-7", "7555138846", "25666-03-7", "7555138745", "25666-02-9", "7555137902", "25665-03-8", "7555138598", "25666-02-3", "7555137175", "25664-02-4", "7555138787", "25666-03-3", "7555138761", "25666-03-1", "7555138514", "25666-01-6", "7555138569", "25666-01-9", "7555137683", "25665-01-8", "7555137696", "25665-01-9", "7555137667", "25665-01-6", "7555137465", "25664-04-1", "7555137319", "25664-02-8", "7555137885", "25665-03-6", "7555137045", "25664-01-2", "7555137090", "25664-01-6", "7555138471", "25666-01-3", "7555137306", "25664-02-7", "7555138497", "25666-01-5", "7555137638", "25665-01-4", "7555137191", "25664-02-5", "7555137247", "25664-02-6", "7555137830", "25665-03-2", "7555137797", "25665-02-7", "7555137771", "25665-02-5", "7555138732", "25666-02-8", "7555085201", "25634-02-3", "7555082749", "25633-02-4", "7555082677", "25633-02-1", "7555082938", "25633-03-4", "7555083146", "25633-04-2", "7555081241", "25633-01-1", "7555087308", "25635-02-1", "7555086842", "25635-01-2", "7555087281", "25635-01-6", "7555087715", "25635-03-1", "7555087265", "25635-01-5", "7555085298", "25634-02-6", "7555082723", "25633-02-3", "7555083872", "25634-01-4", "7555082462", "25633-01-2", "7555085458", "25634-03-6", "7555085386", "25634-03-3", "7555064570", "25612-01-8", "7555065690", "25613-01-3", "7555061382", "25611-01-4", "7555066576", "25613-02-3", "7555075848", "25624-04-6", "7555077860", "25625-04-5", "7555075877", "25625-01-2", "7555075994", "25625-02-3", "7555075910", "25625-01-4", "7555077886", "25625-04-6", "7555076812", "25625-02-5", "7555075835", "25624-04-5", "7555070582", "25622-01-6", "7555069142", "25621-02-7", "7555071703", "25623-02-1", "7555070713", "25622-02-6", "7555070670", "25622-02-3", "7555071745", "25623-02-3", "7555071699", "25623-01-9", "7555067915", "25621-01-1", "7555070335", "25621-04-3", "7555070625", "25622-01-8", "7555070566", "25622-01-5", "7555070481", "25622-01-1", "7555070393", "25621-04-6"];


console.log();

for (let i = 0; i < dataArr.length / 2; i++) {
    let sericalNo = dataArr[i * 2];
    let boxerNum = dataArr[i * 2 + 1];
    let intervalTime = Math.ceil(Math.random() * 10) * 2000 + 5000;


    sleep(5000);
    text("新增").click();


    sleep(3000);
    text("户号 ").click();
    sleep(3000);
    className("android.widget.EditText").depth(16).findOne().setText(sericalNo);
    sleep(7000);
    className("android.widget.Button").depth(14).indexInParent(1).findOne().click();
    sleep(3000);
    text("立即查询").click();
    sleep(8000);
    text("生成普查工单").click();
    sleep(2000);
    text("确定").click();
    sleep(14000);
    if (text("生成普查工单").exists()) {
        console.show();
        console.log("服务器反映异常或者存在普查工单重复提交现象，请重启APP!");
        sleep(4000);
        exit();
    };




    sleep(5000);
    className("android.view.View").depth(17).findOne().click();
    console.log("className(android.view.View).depth(17).findOne().click()")

    sleep(5000);
    text("保存").click();


    sleep(5000);
    while (!text("定位").boundsInside(0, 0, device.width, device.height / 5 * 4).exists()) {
        swipe(450, 1600, 450, 500, 500);
        sleep(2000);
    };
    sleep(2000);
    text("定位").click();
    sleep(5000);
    text("保存").click();

    sleep(2000);
    text("电源").click();
    sleep(2000);
    text("供电电源信息").click();
    while (!className("android.widget.Button").depth(26).indexInParent(4).boundsInside(0, 0, device.width, device.height / 4 * 3).exists()) {
        swipe(450, 1000, 450, 500, 500);
        sleep(2000);
    };
    sleep(2000);
    className("android.widget.Button").depth(26).indexInParent(4).findOne().click();
    sleep(2000);
    className("android.widget.EditText").depth(13).indexInParent(0).findOne().setText(boxerNum);
    sleep(2000);
    text("确定").click();
    sleep(2000);
    className("android.widget.Button").depth(26).indexInParent(7).findOne().click();
    console.log(device.width, device.height);
    sleep(2000);
    while (!className("android.widget.Button").depth(11).indexInParent(12).boundsInside(0, 0, device.width, device.height / 20 * 19).exists()) {
        swipe(450, 1200, 450, 500, 500);
        sleep(2000);
    };
    sleep(2000);
    className("android.widget.Button").depth(11).indexInParent(12).click();
    while (!className("android.widget.Button").depth(26).indexInParent(9).boundsInside(0, 0, device.width, device.height / 4 * 3).exists()) {
        swipe(450, 1000, 450, 500, 500);
        sleep(2000);
    };
    className("android.widget.Button").depth(26).indexInParent(9).findOne().click();
    sleep(2000)
    text("低压客户开关保护(客户侧)").click();
    sleep(2000)
    className("android.widget.Button").depth(26).indexInParent(10).findOne().click();
    sleep(2000)
    text("其他").click();
    sleep(2000);
    text("保存").click();

    sleep(5000);
    text("提交").click();
    sleep(Math.ceil(intervalTime / 2));
    do {
        text("提交").click();
        sleep(Math.ceil(intervalTime / 2));
    } while (text("提交").exists());
    
    sleep(Math.ceil(intervalTime / 2));
    console.log(intervalTime, text("提交").exists(), sericalNo);

}
console.log ("完成！");


